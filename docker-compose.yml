services:
  node:
    build: ./frontend/library
    container_name: react
    working_dir: /app
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./frontend/library/public/:/app/public/
      - ./frontend/library/src/:/app/src/
    command: sleep infinity
    depends_on:
      - django

  api_gateway:
    container_name: api_gateway
    build: ./frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - ${NODE_REACT_PORT}:80
    depends_on:
      - django

  django:
    container_name: django
    build: ./backend
    working_dir: /app
    ports:
      - ${PYTHON_DJANGO_PORT}:3020
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      POSTGRES_HOST: "postgresql"
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    command:
      sh -c "cd library &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             celery -A library worker -l info --detach &&
             celery -A library beat -l info --detach &&
             python manage.py runserver 0.0.0.0:3020"
    depends_on:
      - postgresql
      - redis

  postgresql:
    container_name: postgresql
    image: postgres:latest
    restart: always
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - dbdata:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - ${REDIS_PORT}:6379

volumes:
  dbdata: